<?php

namespace vhallComponent\pendant\models;

use Illuminate\Support\Facades\DB;
use Illuminate\Database\Eloquent\Builder;
use App\Traits\ModelTrait;
use vhallComponent\decouple\models\WebBaseModel;

/**
 * Class PendantStatsModel
 *
 * @package  vhallComponent\pendant\models
 * @property integer $id
 * @property integer $pendant_id              挂件id
 * @property integer $pendant_type            挂件类型
 * @property integer $il_id                   房间id
 * @property integer $date                    日期
 * @property integer $pv_num                  点击次数
 * @property integer $uv_num                  点击人数
 * @property integer $push_screen_num         推屏总次数
 * @property integer $duration                推屏总时长/秒
 * @property string  $created_at              创建时间
 * @property string  $updated_at              更新时间
 * @property string  $deleted_at
 *
 * @date     2021/2/22
 * @author   jun.ou@vhall.com
 * @license  PHP Version 7.3.x {@link http://www.php.net/license/3_0.txt}
 */
class PendantStatsModel extends WebBaseModel
{
    

    protected $table = 'pendant_stats';

    /**
     * The primary key for the model.
     *
     * @var string
     */
    protected $primaryKey = 'id';


    /**
     * @param Builder $model
     * @param array   $condition
     *
     * @return Builder
     *
     * @date     2021/3/18
     * @author   jun.ou@vhall.com
     * @license  PHP Version 7.3.x {@link http://www.php.net/license/3_0.txt}
     */
    public function buildCondition(Builder $model, array $condition): Builder
    {
        $model = parent::buildCondition($model, $condition); // TODO: Change the autogenerated stub

        $model->when(!empty($condition['begin_time']), function ($query) use ($condition) {
            $query->where('date', '>=', $condition['begin_time']);
        });

        $model->when(!empty($condition['end_time']), function ($query) use ($condition) {
            $query->where('date', '<=', $condition['end_time']);
        });

        return $model;
    }

    /**
     * @param $data
     *
     * @return array|false|PendantStatsModel
     *
     * @date     2021/3/23
     * @author   jun.ou@vhall.com
     * @license  PHP Version 7.3.x {@link http://www.php.net/license/3_0.txt}
     */
    public function create($data)
    {
        $datetime           = date('Y-m-d H:i:s');
        $this->il_id        = $data['il_id'];
        $this->pendant_id   = $data['pendant_id'];
        $this->pendant_type = $data['pendant_type'];
        //如果为推屏消息，则添加推屏信息
        if (isset($data['screen_second'])) {
            $this->duration        = $data['screen_second'];
            $this->push_screen_num = 1;
        }
        //如果为用户点击数据，则添加点击数据
        if (isset($data['pv_num'])) {
            $this->pv_num = $data['pv_num'];
        }

        if (isset($data['uv_num'])) {
            $this->uv_num = $data['uv_num'];
        }

        $this->date       = $data['date'];
        $this->updated_at = $datetime;
        $this->created_at = $datetime;
        if (!$this->save()) {
            return false;
        }

        return $this->toArray();
    }

    /**
     * @param $ilId
     * @param $pendantId
     * @param $data
     *
     * @return array|false
     *
     * @date     2021/3/18
     * @author   jun.ou@vhall.com
     * @license  PHP Version 7.3.x {@link http://www.php.net/license/3_0.txt}
     */
    public function updateStats($ilId, $pendantId, $data)
    {
        //1、获取用户数据
        $date  = $data['date'] ?? date('Y-m-d');
        $model = $this
            ->where('il_id', $ilId)
            ->where('pendant_id', $pendantId)
            ->where('date', $date)
            ->first();
        if (empty($model)) {
            $model              = $this;
            $datetime           = date('Y-m-d H:i:s');
            $this->il_id        = $ilId;
            $this->pendant_id   = $pendantId;
            $this->created_at   = $datetime;
            $this->updated_at   = $datetime;
            $this->pendant_type = $data['pendant_type'];
            $model->date        = $date;
        }

        //如果为推屏消息，则添加推屏信息
        if (isset($data['screen_second'])) {
            $model->duration        = $model->duration + $data['screen_second'];
            $model->push_screen_num = $model->push_screen_num + 1;
        }
        //如果为用户点击数据，则添加点击数据
        if (isset($data['pv_num'])) {
            $model->pv_num = $data['pv_num'];
        }
        //如果用户不存在，则用户数增加
        if (!empty($data['uv_num'])) {
            $model->uv_num = $data['uv_num'];
        }
        if (!$model->save()) {
            return false;
        }

        return $model->toArray();
    }

    /**
     * @param $ilId
     * @param $ids
     *
     * @return mixed
     *
     * @date     2021/3/18
     * @author   jun.ou@vhall.com
     * @license  PHP Version 7.3.x {@link http://www.php.net/license/3_0.txt}
     */
    public function getStatsByBgId($ilId, $ids)
    {
        return self::query()
            ->when($ilId, function ($query) use ($ilId) {
                return $query->where(['il_id' => $ilId]);
            })
            ->whereIn('id', $ids)
            ->get();
    }


    /**
     * @param        $condition
     * @param int    $page
     * @param int    $pageSize
     * @param string $groupBy
     *
     * @return \Illuminate\Contracts\Pagination\LengthAwarePaginator
     *
     * @date     2021/3/19
     * @author   jun.ou@vhall.com
     * @license  PHP Version 7.3.x {@link http://www.php.net/license/3_0.txt}
     */
    public function getPageList($condition, $page = 1, $pageSize = 10, $groupBy = 'pendant_id')
    {
        $columns = [
            'name',
            'il_id',
            'pendant_id',
            DB::raw('sum(pv_num) as pv_num'),
            DB::raw('sum(uv_num) as uv_num'),
            DB::raw('sum(push_screen_num) as push_screen_num'),
            DB::raw('sum(duration) as duration')
        ];

        return $this->buildCondition($this->newQuery(), $condition)
            ->leftJoin('pendant', 'pendant_stats.pendant_id', '=', 'pendant.id')
            ->orderBy($this->getTable() . '.' . $this->getKeyName(), 'desc')
            ->groupBy($groupBy)
            ->paginate($pageSize, $columns, 'page', $page);
    }
}